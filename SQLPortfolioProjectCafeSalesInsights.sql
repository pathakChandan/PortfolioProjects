


--Removing Duplicates

with RowNumCTE as (

Select *, 
	ROW_NUMBER() OVER 
	(
	Partition By 
		transaction_date, 
		transaction_time,
		customer_id,
		line_item_amount,
		first_name,
		last_name
	Order By 
		transaction_id
	) as row_num

From PortfolioProject1..CafeSales
)

Select *
From RowNumCTE
where row_num>1
order by transaction_id

Delete 
From RowNumCTE
where row_num>1

--Standardize date format and time time format

SELECT CONVERT(date, transaction_date) as converted_date, CAST(transaction_time as time(0)) as converted_time, customer_id, 
		customer_first_name, loyalty_card_number, product_group, product_id, product_category, product_type, product, line_item_amount, unit_price   
FROM PortfolioProject1..CafeSales
ORDER BY converted_date, converted_time

--some customer firstname has surname as well, trimming of the surname if exists

SELECT
    CASE
        WHEN CHARINDEX(' ', customer_first_name ) > 0 THEN LEFT(customer_first_name, CHARINDEX(' ', customer_first_name) - 1)
        ELSE customer_first_name
    END AS first_name

FROM PortfolioProject1..CafeSales

UPDATE PortfolioProject1..CafeSales
SET customer_first_name = CASE
        WHEN CHARINDEX(' ', customer_first_name ) > 0 THEN LEFT(customer_first_name, CHARINDEX(' ', customer_first_name) - 1)
        ELSE customer_first_name
    END 
FROM PortfolioProject1..CafeSales


--Extracting various tables from the sales report for analysing 

SELECT *
FROM PortfolioProject1..CafeSales
ORDER BY transaction_date, transaction_time

SELECT transaction_id, COUNT(transaction_id)
FROM PortfolioProject1..CafeSales
Group by transaction_id


SELECT DISTINCT customer_id, COUNT(customer_id)
FROM PortfolioProject1..CafeSales
GROUP BY customer_id 
ORDER BY COUNT(customer_id) desc


--Total Daily Sales

SELECT CONVERT(date, transaction_date) as converted_date, SUM(current_retail_price) as daily_sales     
FROM PortfolioProject1..CafeSales
GROUP BY transaction_date
ORDER BY transaction_date

--TOP 5 CUSTOMERS WHO HAVE CONTRIBUTED HIGHEST TO THE TOTAL MONTHLY SALES

SELECT TOP 5 customer_id, customer_first_name as customer_name, SUM(line_item_amount) as customer_contribution   
FROM PortfolioProject1..CafeSales
WHERE customer_first_name is NOT NULL
GROUP BY customer_id, customer_first_name
ORDER BY SUM(line_item_amount) DESC



SELECT product_id, COUNT(product_id) as product_sale_num  
FROM PortfolioProject1..CafeSales
GROUP BY product_id
ORDER BY product_sale_num desc

--highest number of product selling is product_id = 71


SELECT product_id, product, ROUND(SUM(line_item_amount),2) as revenue_generated_per_product_id   
FROM PortfolioProject1..CafeSales																			
GROUP BY product_id, product
ORDER BY revenue_generated_per_product_id desc

--But highest revenue generated by product_id = 61 which is 'Sustainably Grown Organic Lg'


SELECT product_category, ROUND(SUM(line_item_amount),2) as revenue_generated_per_product_category   
FROM PortfolioProject1..CafeSales																		
GROUP BY product_category
ORDER BY revenue_generated_per_product_category desc

--Of all the product category, Coffee has generated most revenue in the month

SELECT product_type, ROUND(SUM(line_item_amount),2) as revenue_generated_per_product_type
FROM PortfolioProject1..CafeSales																			
GROUP BY product_type
ORDER BY revenue_generated_per_product_type desc

--there are 29 different product types where 'Barista Espresso' has generated the most revenue



--Creating VIEWS to store data for visualization

--CREATE VIEW TotalDailySales as 

--SELECT CONVERT(date, transaction_date) as converted_date, SUM(current_retail_price) as daily_sales     --Total Daily Sales
--FROM CafeSales
--GROUP BY transaction_date

--CREATE VIEW CustomersWithHighestRevContribution as

--SELECT TOP 5 customer_id, SUM(line_item_amount) as customer_contribution   
--FROM CafeSales
--GROUP BY customer_id

--CREATE VIEW HighestRevProductId as

--SELECT product_id, COUNT(product_id) as product_sale_num  
--FROM CafeSales
--GROUP BY product_id

--CREATE VIEW HighestRevProduct as

--SELECT product_id, product, ROUND(SUM(line_item_amount),2) as revenue_generated_per_product_id   
--FROM CafeSales																			
--GROUP BY product_id, product

--CREATE VIEW HighestRevProductCategory as

--SELECT product_category, ROUND(SUM(line_item_amount),2) as revenue_generated_per_product_category   
--FROM CafeSales																			
--GROUP BY product_category

--CREATE VIEW HighestRevProductType as

--SELECT product_type, ROUND(SUM(line_item_amount),2) as revenue_generated_per_product_type
--FROM CafeSales																			
--GROUP BY product_type